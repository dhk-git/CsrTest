
<MudPaper Width="250px" Class="d-inline-flex py-3" Square="true">
    <MudNavMenu Class="mud-width-full">
        <MudText Typo="Typo.h6" Class="px-4 text-center">CSR - HN Inc.</MudText>
        @*<MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Icons</MudText>*@
        <MudDivider Class="my-2" />
        <MudNavLink Href="/Home" Icon="@Icons.Filled.Home" IconColor="Color.Primary">Home</MudNavLink>
        <MudNavLink Href="/counter" Icon="@Icons.Filled.Ballot" IconColor="Color.Info">접수목록</MudNavLink>
        @*<MudNavLink Href="/billing" Icon="@Icons.Filled.Receipt" Disabled="true">Billing</MudNavLink>*@
        <MudNavGroup Title="시스템관리" Icon="@Icons.Filled.Settings" Expanded="true">
            <MudNavLink Href="/settings/customers" Icon="@Icons.Filled.AccountCircle" IconColor="Color.Info">고객사관리</MudNavLink>
            <MudNavLink Href="/settings/projects" Icon="@Icons.Filled.AccountBalanceWallet" IconColor="Color.Info">프로젝트관리</MudNavLink>
            <MudNavLink Href="/settings/users" Icon="@Icons.Filled.People" IconColor="Color.Success">사용자관리</MudNavLink>
        </MudNavGroup>
    </MudNavMenu>
</MudPaper>


<MudPaper Width="250px" Class="d-inline-flex py-3" Square="true">
    <MudNavMenu Class="mud-width-full">
        <MudText Typo="Typo.h6" Class="px-4 text-center">CSR - HN Inc.</MudText>
        <MudDivider Class="my-2" />
        @foreach (var model in menuModels)
        {
            if (model.MenuType == MenuType.Program)
            {
                <MudNavLink Href="@model.Href" Icon="@model.IconPath" IconColor="@model.IconColor">@model.MenuName</MudNavLink>
            }
            if (model.MenuType == MenuType.Group)
            {
                <MudNavGroup Title="@model.MenuName" Icon="@model.IconPath" Expanded="true">
                    @foreach (var item in model.SubMenus)
                    {
                        <MudNavLink Href="@item.Href" Icon="@item.IconPath" IconColor="@item.IconColor">@item.MenuName</MudNavLink>
                    }
                </MudNavGroup>
            }
        }
    </MudNavMenu>
</MudPaper>

@*<MudNavLink Href="/settings/customers" Icon="@Icons.Filled.AccountCircle" IconColor="Color.Info">고객사관리</MudNavLink>
    <MudNavLink Href="/settings/projects" Icon="@Icons.Filled.AccountBalanceWallet" IconColor="Color.Info">프로젝트관리</MudNavLink>
    <MudNavLink Href="/settings/users" Icon="@Icons.Filled.People" IconColor="Color.Success">사용자관리</MudNavLink>*@

@code {
    public enum MenuType
    {
        Group,
        Program
    }
    public class MenuModel
    {
        public MenuType MenuType { get; set; }
        public float SortNo { get; set; }
        public string MenuID { get; set; }
        public string MenuName { get; set; }
        public string Href { get; set; }
        public string IconPath { get; set; }
        public Color IconColor { get; set; }
        public List<MenuModel> SubMenus { get; set; }
    }

    public List<MenuModel> menuModels = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        MenuModel menuModel = new MenuModel
            {
                MenuType = MenuType.Program,
                SortNo = 1f,
                MenuID = "M001",
                MenuName = "Home",
                Href = "/home",
                IconPath = Icons.Filled.Home,
                IconColor = Color.Primary
            };
        menuModels.Add(menuModel);
        MenuModel menuModel1 = new MenuModel
            {
                MenuType = MenuType.Program,
                SortNo = 2f,
                MenuID = "M002",
                MenuName = "접수목록",
                Href = "/counter",
                IconPath = Icons.Filled.Ballot,
                IconColor = Color.Info
            };
        menuModels.Add(menuModel1);
        List<MenuModel> subMenus = new List<MenuModel>();
        subMenus.Add(new MenuModel
            {
                MenuType = MenuType.Program,
                SortNo = 4f,
                MenuID = "M004",
                MenuName = "고객사관리",
                Href = "/settings/customers",
                IconPath = Icons.Filled.AccountCircle,
                IconColor = Color.Info
            });
        subMenus.Add(new MenuModel
            {
                MenuType = MenuType.Program,
                SortNo = 5f,
                MenuID = "M005",
                MenuName = "프로젝트관리",
                Href = "/settings/projects",
                IconPath = Icons.Filled.AccountBalanceWallet,
                IconColor = Color.Info
            });
        subMenus.Add(new MenuModel
            {
                MenuType = MenuType.Program,
                SortNo = 6f,
                MenuID = "M006",
                MenuName = "사용자관리",
                Href = "/settings/users",
                IconPath = Icons.Filled.People,
                IconColor = Color.Success
            });
        MenuModel menuModel2 = new MenuModel
            {
                MenuType = MenuType.Group,
                SortNo = 3f,
                MenuID = "M003",
                MenuName = "시스템관리",
                Href = "",
                IconPath = Icons.Filled.Settings,
                IconColor = Color.Info,
                SubMenus = subMenus
            };
        menuModels.Add(menuModel2);
    }

}


@*<MudPaper Width="250px" Class="d-inline-flex py-3" Square="true">
    <MudNavMenu Class="mud-width-full">
    <MudText Typo="Typo.h6" Class="px-4">Font Awesome</MudText>
    <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Icons</MudText>
    <MudDivider Class="my-2" />
    <MudNavLink Href="/dashboard" Icon="fas fa-chart-line">Dashboard</MudNavLink>
    <MudNavLink Href="/servers" Icon="fas fa-server">Servers</MudNavLink>
    <MudNavLink Href="/billing" Icon="fas fa-receipt" Disabled="true">Billing</MudNavLink>
    <MudNavGroup Title="Settings" Icon="fas fa-cogs" Expanded="true">
    <MudNavLink Href="/users" Icon="fas fa-users" IconColor="Color.Success">Users</MudNavLink>
    <MudNavLink Href="/security" Icon="fas fa-user-shield" IconColor="Color.Info">Security</MudNavLink>
    </MudNavGroup>
    </MudNavMenu>
    </MudPaper>
*@
@*<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
    <a class="navbar-brand" href="">Csr</a>
    <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
    <span class="navbar-toggler-icon"></span>
    </button>
    </div>
    </div>

    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
    <div class="nav-item px-3">
    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
    <span class="oi oi-home" aria-hidden="true"></span> Home
    </NavLink>
    </div>
    <div class="nav-item px-3">
    <NavLink class="nav-link" href="counter">
    <span class="oi oi-plus" aria-hidden="true"></span> Counter
    </NavLink>
    </div>
    <div class="nav-item px-3">
    <NavLink class="nav-link" href="fetchdata">
    <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
    </NavLink>
    </div>
    <div class="nav-item px-3">
    <NavLink class="nav-link" href="users">
    <span class="oi oi-list-rich" aria-hidden="true"></span> Users
    </NavLink>
    </div>
    </nav>
    </div>

    @code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
    collapseNavMenu = !collapseNavMenu;
    }
    }
*@