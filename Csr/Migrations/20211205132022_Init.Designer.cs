// <auto-generated />
using System;
using Csr.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Csr.Migrations
{
    [DbContext(typeof(CsrDbContext))]
    [Migration("20211205132022_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Csr.Models.CT_PROJECT", b =>
                {
                    b.Property<string>("PROJECT_ID")
                        .HasColumnType("varchar(20)")
                        .HasComment("프로젝트ID");

                    b.Property<DateTime>("CREATE_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("생성시간");

                    b.Property<string>("CREATE_USER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("생성자");

                    b.Property<string>("MD_CUSTOMERCUSTOMER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("MODIFY_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("생성시간");

                    b.Property<string>("MODIFY_USER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("수정자");

                    b.Property<string>("PROJECT_NM")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("프로젝트명");

                    b.Property<string>("REMARK")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("비고");

                    b.HasKey("PROJECT_ID");

                    b.HasIndex("MD_CUSTOMERCUSTOMER_ID");

                    b.ToTable("CT_PROJECT");

                    b.HasComment("CT_프로젝트");
                });

            modelBuilder.Entity("Csr.Models.CT_REQUEST", b =>
                {
                    b.Property<int>("REQUEST_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("요청ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("REQUEST_ID"), 1L, 1);

                    b.Property<DateTime>("CREATE_DT")
                        .HasColumnType("date")
                        .HasComment("요청일자");

                    b.Property<DateTime>("CREATE_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("생성시간");

                    b.Property<string>("CREATE_USER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("생성자");

                    b.Property<string>("MD_USERUSER_ID")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("MODIFY_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("생성시간");

                    b.Property<string>("MODIFY_USER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("수정자");

                    b.Property<string>("PROJECT_ID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("REMARK")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("비고");

                    b.Property<string>("REQUEST_DETAIL")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("내용");

                    b.Property<string>("REQUEST_LEVEL")
                        .HasColumnType("varchar(50)")
                        .HasComment("긴급도");

                    b.Property<string>("REQUEST_STATUS")
                        .HasColumnType("varchar(50)")
                        .HasComment("요청상태");

                    b.Property<string>("REQUEST_TITLE")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("제목");

                    b.Property<string>("REQUEST_TYPE")
                        .HasColumnType("varchar(50)")
                        .HasComment("요청유형");

                    b.HasKey("REQUEST_ID");

                    b.HasIndex("MD_USERUSER_ID");

                    b.HasIndex("PROJECT_ID");

                    b.ToTable("CT_REQUEST");

                    b.HasComment("CT_요청");
                });

            modelBuilder.Entity("Csr.Models.CT_RESPONSE", b =>
                {
                    b.Property<int>("RESPONSE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("답변ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RESPONSE_ID"), 1L, 1);

                    b.Property<DateTime>("CREATE_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("생성시간");

                    b.Property<string>("CREATE_USER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("생성자");

                    b.Property<int?>("CT_REQUESTREQUEST_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FROM_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("시작일시");

                    b.Property<int>("MAN_HOUR")
                        .HasPrecision(5, 2)
                        .HasColumnType("int")
                        .HasComment("실투입공수");

                    b.Property<DateTime>("MODIFY_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("생성시간");

                    b.Property<string>("MODIFY_USER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("수정자");

                    b.Property<string>("REMARK")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("비고");

                    b.Property<string>("RESPONSE_DETAIL")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("내용");

                    b.Property<string>("RESPONSE_STATUS")
                        .HasColumnType("varchar(50)")
                        .HasComment("답변상태");

                    b.Property<string>("RESPONSE_TITLE")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("제목");

                    b.Property<DateTime>("TO_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("종료일시");

                    b.Property<string>("USER_ID1")
                        .HasColumnType("varchar(20)");

                    b.HasKey("RESPONSE_ID");

                    b.HasIndex("CT_REQUESTREQUEST_ID");

                    b.HasIndex("USER_ID1");

                    b.ToTable("CT_RESPONSE");

                    b.HasComment("CT_답변");
                });

            modelBuilder.Entity("Csr.Models.MD_CUSTOMER", b =>
                {
                    b.Property<string>("CUSTOMER_ID")
                        .HasColumnType("varchar(20)")
                        .HasComment("고객사ID");

                    b.Property<DateTime>("CREATE_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("생성시간");

                    b.Property<string>("CREATE_USER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("생성자");

                    b.Property<string>("CUSTOMER_NM")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("프로젝트명");

                    b.Property<string>("DEL_FG")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N")
                        .HasComment("삭제여부");

                    b.Property<DateTime>("MODIFY_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("생성시간");

                    b.Property<string>("MODIFY_USER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("수정자");

                    b.Property<string>("REMARK")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("비고");

                    b.Property<DateTime>("VALID_FROM_DT")
                        .HasColumnType("datetime")
                        .HasComment("유효시작일");

                    b.Property<DateTime?>("VALID_TO_DT")
                        .HasColumnType("datetime")
                        .HasComment("유효종료일");

                    b.HasKey("CUSTOMER_ID");

                    b.ToTable("MD_CUSTOMER");

                    b.HasComment("MD_고객사");
                });

            modelBuilder.Entity("Csr.Models.MD_USER", b =>
                {
                    b.Property<string>("USER_ID")
                        .HasColumnType("varchar(20)")
                        .HasComment("사용자ID");

                    b.Property<DateTime>("CREATE_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("생성시간");

                    b.Property<string>("CREATE_USER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("생성자");

                    b.Property<DateTime>("MODIFY_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("생성시간");

                    b.Property<string>("MODIFY_USER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("수정자");

                    b.Property<string>("REMARK")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("비고");

                    b.Property<string>("USER_NM")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("사용자명");

                    b.Property<byte[]>("USER_PW")
                        .IsRequired()
                        .HasColumnType("varbinary(100)")
                        .HasComment("사용자PW");

                    b.Property<string>("USER_ROLE")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("권한");

                    b.HasKey("USER_ID");

                    b.ToTable("MD_USER");

                    b.HasComment("MD_사용자");

                    b.HasData(
                        new
                        {
                            USER_ID = "admin",
                            CREATE_DTTM = new DateTime(2021, 12, 5, 22, 20, 22, 197, DateTimeKind.Local).AddTicks(7768),
                            CREATE_USER_ID = "A",
                            MODIFY_DTTM = new DateTime(2021, 12, 5, 22, 20, 22, 197, DateTimeKind.Local).AddTicks(7777),
                            MODIFY_USER_ID = "A",
                            USER_NM = "admin",
                            USER_PW = new byte[] { 97, 100, 109, 105, 110, 49 },
                            USER_ROLE = "Admin"
                        });
                });

            modelBuilder.Entity("Csr.Models.SYS_CODE", b =>
                {
                    b.Property<string>("SYS_CD_GROUP")
                        .HasColumnType("varchar(50)")
                        .HasComment("시스템코드그룹");

                    b.Property<string>("SYS_CD")
                        .HasColumnType("varchar(50)")
                        .HasComment("시스템코드");

                    b.Property<DateTime>("CREATE_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("생성시간");

                    b.Property<string>("CREATE_USER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("생성자");

                    b.Property<DateTime>("MODIFY_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("생성시간");

                    b.Property<string>("MODIFY_USER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("수정자");

                    b.Property<string>("REMARK")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("비고");

                    b.Property<decimal>("SORT_NO")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasComment("정렬순서");

                    b.Property<string>("SYS_CD_NM")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("시스템코드명");

                    b.Property<string>("VALUE_1")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("값1");

                    b.Property<string>("VALUE_2")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("값2");

                    b.Property<string>("VALUE_3")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("값3");

                    b.HasKey("SYS_CD_GROUP", "SYS_CD");

                    b.ToTable("SYS_CODE");

                    b.HasComment("SYS_시스템코드");

                    b.HasData(
                        new
                        {
                            SYS_CD_GROUP = "REQUEST_TYPE",
                            SYS_CD = "Question",
                            CREATE_DTTM = new DateTime(2021, 12, 5, 22, 20, 22, 197, DateTimeKind.Local).AddTicks(7880),
                            CREATE_USER_ID = "admin",
                            MODIFY_DTTM = new DateTime(2021, 12, 5, 22, 20, 22, 197, DateTimeKind.Local).AddTicks(7880),
                            MODIFY_USER_ID = "admin",
                            SORT_NO = 1m,
                            SYS_CD_NM = "단순문의"
                        },
                        new
                        {
                            SYS_CD_GROUP = "REQUEST_TYPE",
                            SYS_CD = "ProgramError",
                            CREATE_DTTM = new DateTime(2021, 12, 5, 22, 20, 22, 197, DateTimeKind.Local).AddTicks(7889),
                            CREATE_USER_ID = "admin",
                            MODIFY_DTTM = new DateTime(2021, 12, 5, 22, 20, 22, 197, DateTimeKind.Local).AddTicks(7889),
                            MODIFY_USER_ID = "admin",
                            SORT_NO = 1m,
                            SYS_CD_NM = "프로그램오류"
                        },
                        new
                        {
                            SYS_CD_GROUP = "REQUEST_TYPE",
                            SYS_CD = "ModifyData",
                            CREATE_DTTM = new DateTime(2021, 12, 5, 22, 20, 22, 197, DateTimeKind.Local).AddTicks(7896),
                            CREATE_USER_ID = "admin",
                            MODIFY_DTTM = new DateTime(2021, 12, 5, 22, 20, 22, 197, DateTimeKind.Local).AddTicks(7896),
                            MODIFY_USER_ID = "admin",
                            SORT_NO = 1m,
                            SYS_CD_NM = "데이터수정"
                        });
                });

            modelBuilder.Entity("Csr.Models.SYS_CODE_GROUP", b =>
                {
                    b.Property<string>("SYS_CD_GROUP")
                        .HasColumnType("varchar(50)")
                        .HasComment("코드그룹");

                    b.Property<DateTime>("CREATE_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("생성시간");

                    b.Property<string>("CREATE_USER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("생성자");

                    b.Property<DateTime>("MODIFY_DTTM")
                        .HasColumnType("datetime")
                        .HasComment("생성시간");

                    b.Property<string>("MODIFY_USER_ID")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("수정자");

                    b.Property<string>("REMARK")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("비고");

                    b.Property<decimal>("SORT_NO")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasComment("정렬순서");

                    b.Property<string>("SYS_CD_GROUP_NM")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("코드그룹명");

                    b.HasKey("SYS_CD_GROUP");

                    b.ToTable("SYS_CODE_GROUP");

                    b.HasComment("SYS_시스템코드_그룹");

                    b.HasData(
                        new
                        {
                            SYS_CD_GROUP = "REQUEST_TYPE",
                            CREATE_DTTM = new DateTime(2021, 12, 5, 22, 20, 22, 197, DateTimeKind.Local).AddTicks(7867),
                            CREATE_USER_ID = "admin",
                            MODIFY_DTTM = new DateTime(2021, 12, 5, 22, 20, 22, 197, DateTimeKind.Local).AddTicks(7868),
                            MODIFY_USER_ID = "admin",
                            SORT_NO = 1m,
                            SYS_CD_GROUP_NM = "요청유형"
                        });
                });

            modelBuilder.Entity("Csr.Models.CT_PROJECT", b =>
                {
                    b.HasOne("Csr.Models.MD_CUSTOMER", "MD_CUSTOMER")
                        .WithMany()
                        .HasForeignKey("MD_CUSTOMERCUSTOMER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MD_CUSTOMER");
                });

            modelBuilder.Entity("Csr.Models.CT_REQUEST", b =>
                {
                    b.HasOne("Csr.Models.MD_USER", "MD_USER")
                        .WithMany()
                        .HasForeignKey("MD_USERUSER_ID");

                    b.HasOne("Csr.Models.CT_PROJECT", "CT_PROJECT")
                        .WithMany()
                        .HasForeignKey("PROJECT_ID");

                    b.Navigation("CT_PROJECT");

                    b.Navigation("MD_USER");
                });

            modelBuilder.Entity("Csr.Models.CT_RESPONSE", b =>
                {
                    b.HasOne("Csr.Models.CT_REQUEST", null)
                        .WithMany("CT_RESPONSE")
                        .HasForeignKey("CT_REQUESTREQUEST_ID");

                    b.HasOne("Csr.Models.MD_USER", "USER_ID")
                        .WithMany()
                        .HasForeignKey("USER_ID1");

                    b.Navigation("USER_ID");
                });

            modelBuilder.Entity("Csr.Models.SYS_CODE", b =>
                {
                    b.HasOne("Csr.Models.SYS_CODE_GROUP", null)
                        .WithMany("SYS_CODE")
                        .HasForeignKey("SYS_CD_GROUP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Csr.Models.CT_REQUEST", b =>
                {
                    b.Navigation("CT_RESPONSE");
                });

            modelBuilder.Entity("Csr.Models.SYS_CODE_GROUP", b =>
                {
                    b.Navigation("SYS_CODE");
                });
#pragma warning restore 612, 618
        }
    }
}
